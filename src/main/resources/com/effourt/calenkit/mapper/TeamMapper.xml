<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.effourt.calenkit.mapper.TeamMapper">
    <!-- INSERT -->
    <!-- 일정상세 삽입 시 함께 호출 - 권한레벨로 호스트와 동행 구분(1,0,9) -->
    <insert id="save">
        INSERT INTO TEAM VALUES( #{teamMid}, #{teamSno}, #{teamLevel}, 0)
    </insert>

    <!-- UPDATE -->
    <!-- 일정번호와 아이디를 전달받아 팀의 권한레벨, 즐겨찾기 변경 -->
    <update id="update">
        UPDATE TEAM
        <set>
            <if test="teamLevel == 0 or teamLevel == 1">
                TEAM_LEVEL=#{teamLevel},
            </if>
            <if test="teamBookmark == 0 and teamBookmark == 1">
                TEAM_BOOKMARK=#{teamBookmark},
            </if>
        </set>
        WHERE TEAM_SNO=#{teamSno} AND TEAM_MID=#{teamMid}
    </update>

    <!-- DELETE -->
    <delete id="delete">
        DELETE FROM TEAM WHERE TEAM_SNO=#{teamSno} AND TEAM_MID=#{teamMid}
    </delete>

    <!-- Team(1) : Schedule(1) -->
    <!-- 팀별 일정을 출력하기 위한 Mapper 설정 -->
<!--    <resultMap type="Team" id="TeamResultMap" autoMapping="true"/>-->
<!--    <resultMap type="Schedule" id="ScheduleResultMap" autoMapping="true"/>-->
<!--    <resultMap type="TeamScheduleMember" id="TeamScheduleResultMap" autoMapping="true">-->
<!--        <association property="Schedule" resultMap="ScheduleResultMap" autoMapping="true"/>-->
<!--        <association property="Team" resultMap="TeamResultMap" autoMapping="true"/>-->
<!--    </resultMap>-->

    <!-- SELECT -->
    <!-- id를 기준으로 일정 번호를 검색, 즐겨찾기 일정 전체 출력-->
    <!-- 1. TEAM_ID를 입력해 TEAM_SNO를 가져오고 -->
    <!-- 2. findAllByScNo 통해 TEAM_TITLE 출력 -->
    <!--  -->
    <select id="findByMid" resultType="Team">
        SELECT TEAM_SNO FROM TEAM
        WHERE TEAM_MID=#{teamMid}
        <if test="teamBookmark=1">
            AND TEAM_BOOKMARK=1
        </if>
    </select>

    <!-- 일정 공유 팝업창-팀 멤버리스트(회원아이디,닉네임) 및 팀 정보(권한정보) 출력 -->
    <select id="findBySno" resultMap="Team">
        SELECT TEAM_LEVEL, MEM_ID, MEM_NAME, MEM_IMAGE
        FROM TEAM
        JOIN MEMBER
        ON TEAM_MID=MEM_ID
        WHERE TEAM_SNO=#{teamSno} AND MEM_STATUS=1
    </select>

    <!--
    List<Team> teamList = TeamRepository.findBySno(teamSno);
    Map<String ,object> selectTeamMap = new HashMap<>();
    int size = 0;
    for(int i=0; i<teamList.size(); i++){
        Member member = MemberRepository.findByMid(teamList[i].getTeamMid);
        Integer level= teamList[i].getTeamLevel;
        if(member.getMemStatus()==1){
            selectTeamMap.put("member" + i, member);
            selectTeamMap.put("level" + i, level);
            size++;
        }
    }
    selectTeamMap.put("size", size);
    selectTeamMap = {"member0" : member, "level0": level, "member1" : member, "level1": level, "size" :2}

    private Team team;
    private Member member;


    List<Team> selectTeamList = new ArrayList<>();
selectteam : [team,member]
    }
    New Member
    for(Team team:selectTeamList){
        (team.getTeamMid());
        team.get();
        team
    }


    private Team team;
    private Member member;

    List<Team> teamList = TeamRepository.findBySno(teamSno);
    Map<String, Object> map = new HashMap<>();
    List<Map<String, Object>> memberList = new ArrayList<>();
    for (Team team : teamList) {
        Member member = findByMemId(team.getTeamMid());
        if (member.getStatus == 1) {
            map.put("member", member);
            map.put("team", team);
            memberList.add(map);
        }
    }

    map.put("teamMap", teamList);
    -->
</mapper>